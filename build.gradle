plugins {
    id "dev.architectury.loom" version "1.3.357" apply false
    id 'idea'
    id 'java'
}

String getVersionSuffix() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags', '--dirty="-dev"', '--broken'
        standardOutput = stdout
    }
    stdout = stdout.toString().strip()
    def suffix = ""
    if (stdout.endsWith("-dev")) {
        stdout = stdout.substring(0, stdout.length() - "-dev".length())
        suffix = "-dev"
    }
    if (stdout.endsWith("-broken")) {
        stdout = stdout.substring(0, stdout.length() - "-broken".length())
        suffix = "-broken"
    }
    if (stdout.indexOf('-') < 0) {
        return "0" + suffix
    }
    def split = stdout.split('-')
    return split[split.length - 2] + suffix
}

tasks.register('move-jar', Copy) {
    mkdir "$rootDir/artifacts"
    from "$rootDir/platforms/fabric-1.20.1/build/libs", "$rootDir/platforms/forge-1.20.1/build/libs"
    into "$rootDir/artifacts"
}

tasks.register('generate-version-file') {
    doFirst {
        def path = project.projectDir.toPath().resolve("temp")
        path.toFile().deleteDir()
    }
    def content = project.mod_version + "." + getVersionSuffix()
    def file = file("./temp/version/version-info")
    file.parentFile.mkdirs()
    file.write(content)
}

subprojects {
    tasks.withType(JavaCompile).configureEach {
        options.release.set 17
        options.encoding = 'UTF-8'
    }
    repositories {
        maven {
            url "https://dl.cloudsmith.io/public/klikli-dev/mods/maven/"
            content {
                includeGroup "com.klikli_dev"
            }
        }
        maven {
            url "https://maven.blamejared.com/"
            content {
                includeGroup "mezz.jei"
            }
        }
        maven {
            url "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            url "https://maven.parchmentmc.org"
        }
    }
    version = project.mod_version + "." + getVersionSuffix()
    group = project.maven_group
    java {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
}